// This will be used just so i can keep a few functions saved for later


    function getCaretPosition(element) {
        var caretOffset = 0;
        var doc = element.ownerDocument || element.document;
        var win = doc.defaultView || doc.parentWindow;
        var sel;
        if (typeof win.getSelection != "undefined") {
            sel = win.getSelection();
            if (sel.rangeCount > 0) {
                var range = win.getSelection().getRangeAt(0);
                var preCaretRange = range.cloneRange();
                preCaretRange.selectNodeContents(element);
                preCaretRange.setEnd(range.endContainer, range.endOffset);
                caretOffset = preCaretRange.toString().length;
            }
        } else if ( (sel = doc.selection) && sel.type != "Control") {
            var textRange = sel.createRange();
            var preCaretTextRange = doc.body.createTextRange();
            preCaretTextRange.moveToElementText(element);
            preCaretTextRange.setEndPoint("EndToEnd", textRange);
            caretOffset = preCaretTextRange.text.length;
        }
        return caretOffset;
    }

    async function getRealPosition(html, startPosition) {
        const array = html.replaceAll('<div>', '').split('</div>')
        array.pop()
        let realPosition = []

        let count = 0
        for (let index = 0; index < array.length && !realPosition.length; index++) {
            const element = array[index].trim().replaceAll('<br>', '')
            const positionsInLine = element.length + 1
            const allPassedPositions = positionsInLine + count
            if(allPassedPositions > startPosition) {
                realPosition = [index, startPosition - count] 
            }
            count += positionsInLine
        }

        return realPosition
    }